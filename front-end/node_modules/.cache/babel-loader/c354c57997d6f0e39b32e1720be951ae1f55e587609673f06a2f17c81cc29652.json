{"ast":null,"code":"import axios from \"axios\";\nimport { SET_CURRENT_USER, SUCCESSFUL_REGISTER, FAILURE_REGISTER, ERROR, AUTH_ERROR, SUCCESSFUL_LOGIN, FAILURE_LOGIN, LOGOUT } from \"./types\";\nimport { getServer } from \"../utill\";\nimport setAuthToken from \"../utill/setAuthToken\";\n//set a user\nexport const setCurrentUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(`${getServer()}/api/auth`);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n//register a user\nexport const register = userData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    const res = await axios.post(`${getServer()}/api/users`, userData, config);\n    dispatch({\n      type: SUCCESSFUL_REGISTER,\n      payload: res.data\n    });\n    dispatch(setCurrentUser());\n  } catch (err) {\n    const error = err.response.data.errors;\n    if (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    } else {\n      dispatch({\n        type: FAILURE_REGISTER\n      });\n    }\n  }\n};\n//login  user\nexport const login = userData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    const res = await axios.post(`${getServer()}/api/auth`, userData, config);\n    dispatch({\n      type: SUCCESSFUL_LOGIN,\n      payload: res.data\n    });\n    dispatch(setCurrentUser());\n  } catch (err) {\n    const error = err.response.data.errors;\n    if (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    } else {\n      dispatch({\n        type: FAILURE_LOGIN\n      });\n    }\n  }\n};\n// logout\nexport const logout = () => dispatch => dispatch({\n  type: LOGOUT\n});","map":{"version":3,"names":["axios","SET_CURRENT_USER","SUCCESSFUL_REGISTER","FAILURE_REGISTER","ERROR","AUTH_ERROR","SUCCESSFUL_LOGIN","FAILURE_LOGIN","LOGOUT","getServer","setAuthToken","setCurrentUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","userData","config","headers","post","error","response","errors","login","logout"],"sources":["D:/mernstack/front-end/src/actions/authAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  SET_CURRENT_USER,\r\n  SUCCESSFUL_REGISTER,\r\n  FAILURE_REGISTER,\r\n  ERROR,\r\n  AUTH_ERROR,\r\n  SUCCESSFUL_LOGIN,\r\n  FAILURE_LOGIN,\r\n  LOGOUT,\r\n} from \"./types\";\r\nimport { getServer } from \"../utill\";\r\nimport setAuthToken from \"../utill/setAuthToken\";\r\n//set a user\r\nexport const setCurrentUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(`${getServer()}/api/auth`);\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n//register a user\r\nexport const register = (userData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(`${getServer()}/api/users`, userData, config);\r\n    dispatch({\r\n      type: SUCCESSFUL_REGISTER,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setCurrentUser()); \r\n  } catch (err) {\r\n    const error = err.response.data.errors;\r\n    if (error) {\r\n      dispatch({\r\n        type: ERROR,\r\n        payload: error,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: FAILURE_REGISTER,\r\n      });\r\n    }\r\n  }\r\n};\r\n//login  user\r\nexport const login = (userData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(`${getServer()}/api/auth`, userData, config);\r\n    dispatch({\r\n      type: SUCCESSFUL_LOGIN,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setCurrentUser());\r\n  } catch (err) {\r\n    const error = err.response.data.errors;\r\n    if (error) {\r\n      dispatch({\r\n        type: ERROR,\r\n        payload: error,\r\n      }); \r\n    } else {\r\n      dispatch({\r\n        type: FAILURE_LOGIN,\r\n      });\r\n    }\r\n  }\r\n};\r\n// logout\r\nexport const logout = () => dispatch => dispatch({type: LOGOUT})"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,gBAAgB,EAChBC,mBAAmB,EACnBC,gBAAgB,EAChBC,KAAK,EACLC,UAAU,EACVC,gBAAgB,EAChBC,aAAa,EACbC,MAAM,QACD,SAAS;AAChB,SAASC,SAAS,QAAQ,UAAU;AACpC,OAAOC,YAAY,MAAM,uBAAuB;AAChD;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACtD,IAAIC,YAAY,CAACC,KAAK,EAAE;IACtBJ,YAAY,CAACG,YAAY,CAACC,KAAK,CAAC;EAClC;EACA,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,GAAEP,SAAS,CAAC,CAAE,WAAU,CAAC;IACtDG,QAAQ,CAAC;MACPK,IAAI,EAAEhB,gBAAgB;MACtBiB,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZR,QAAQ,CAAC;MACPK,IAAI,EAAEZ;IACR,CAAC,CAAC;EACJ;AACF,CAAC;AACD;AACA,OAAO,MAAMgB,QAAQ,GAAIC,QAAQ,IAAK,MAAOV,QAAQ,IAAK;EACxD,MAAMW,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EACD,IAAI;IACF,MAAMT,GAAG,GAAG,MAAMf,KAAK,CAACyB,IAAI,CAAE,GAAEhB,SAAS,CAAC,CAAE,YAAW,EAAEa,QAAQ,EAAEC,MAAM,CAAC;IAC1EX,QAAQ,CAAC;MACPK,IAAI,EAAEf,mBAAmB;MACzBgB,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;IACFP,QAAQ,CAACD,cAAc,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC,OAAOS,GAAG,EAAE;IACZ,MAAMM,KAAK,GAAGN,GAAG,CAACO,QAAQ,CAACR,IAAI,CAACS,MAAM;IACtC,IAAIF,KAAK,EAAE;MACTd,QAAQ,CAAC;QACPK,IAAI,EAAEb,KAAK;QACXc,OAAO,EAAEQ;MACX,CAAC,CAAC;IACJ,CAAC,MAAM;MACLd,QAAQ,CAAC;QACPK,IAAI,EAAEd;MACR,CAAC,CAAC;IACJ;EACF;AACF,CAAC;AACD;AACA,OAAO,MAAM0B,KAAK,GAAIP,QAAQ,IAAK,MAAOV,QAAQ,IAAK;EACrD,MAAMW,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EACD,IAAI;IACF,MAAMT,GAAG,GAAG,MAAMf,KAAK,CAACyB,IAAI,CAAE,GAAEhB,SAAS,CAAC,CAAE,WAAU,EAAEa,QAAQ,EAAEC,MAAM,CAAC;IACzEX,QAAQ,CAAC;MACPK,IAAI,EAAEX,gBAAgB;MACtBY,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;IACFP,QAAQ,CAACD,cAAc,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC,OAAOS,GAAG,EAAE;IACZ,MAAMM,KAAK,GAAGN,GAAG,CAACO,QAAQ,CAACR,IAAI,CAACS,MAAM;IACtC,IAAIF,KAAK,EAAE;MACTd,QAAQ,CAAC;QACPK,IAAI,EAAEb,KAAK;QACXc,OAAO,EAAEQ;MACX,CAAC,CAAC;IACJ,CAAC,MAAM;MACLd,QAAQ,CAAC;QACPK,IAAI,EAAEV;MACR,CAAC,CAAC;IACJ;EACF;AACF,CAAC;AACD;AACA,OAAO,MAAMuB,MAAM,GAAGA,CAAA,KAAMlB,QAAQ,IAAIA,QAAQ,CAAC;EAACK,IAAI,EAAET;AAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}