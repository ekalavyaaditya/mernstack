{"ast":null,"code":"import axios from \"axios\";\nimport { getServer } from \"../utill\";\nimport { GET_PROFILE, PROFILE_ERROR } from \"./types\";\nexport const getProfile = id => async dispatch => {\n  try {\n    const res = await axios.get(`${getServer()}/api/profile/${id}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        meg: error.response.statusType\n      }\n    });\n  }\n};\nexport const createProfile = (profileData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = axios.post(`${getServer()}/api/profile/`, profileData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    const error = err.response.data.errors;\n    if (error) {\n      dispatch({\n        type: error,\n        payload: error\n      });\n    } else {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          meg: error.response.statusType\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","getServer","GET_PROFILE","PROFILE_ERROR","getProfile","id","dispatch","res","get","type","payload","data","error","meg","response","statusType","createProfile","profileData","history","config","headers","post","err","errors"],"sources":["C:/Users/INSP 5430 I5/OneDrive/Desktop/mernstack/front-end/src/actions/profileAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { getServer } from \"../utill\";\r\nimport {GET_PROFILE,PROFILE_ERROR} from \"./types\"\r\n\r\nexport const getProfile = (id) => async dispatch=>{\r\n        try {\r\n            const res =await axios.get(`${getServer()}/api/profile/${id}`);\r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: res.data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {meg: error.response.statusType},\r\n            });\r\n        }\r\n}\r\nexport const createProfile = (profileData, history)=>async dispatch=>{\r\n    try {\r\n        const config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        const res =axios.post(`${getServer()}/api/profile/`,profileData,config)\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload:res.data,\r\n        });\r\n    } catch (err) {\r\n        const error = err.response.data.errors;\r\n    if (error) {\r\n      dispatch({\r\n        type: error,\r\n        payload: error,\r\n      }); \r\n    } else {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: {meg: error.response.statusType},\r\n      });\r\n    }\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,UAAU;AACpC,SAAQC,WAAW,EAACC,aAAa,QAAO,SAAS;AAEjD,OAAO,MAAMC,UAAU,GAAIC,EAAE,IAAK,MAAMC,QAAQ,IAAE;EAC1C,IAAI;IACA,MAAMC,GAAG,GAAE,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,SAAS,CAAC,CAAC,gBAAgBI,EAAE,EAAE,CAAC;IAC9DC,QAAQ,CAAC;MACLG,IAAI,EAAEP,WAAW;MACjBQ,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZN,QAAQ,CAAC;MACLG,IAAI,EAAEN,aAAa;MACnBO,OAAO,EAAE;QAACG,GAAG,EAAED,KAAK,CAACE,QAAQ,CAACC;MAAU;IAC5C,CAAC,CAAC;EACN;AACR,CAAC;AACD,OAAO,MAAMC,aAAa,GAAGA,CAACC,WAAW,EAAEC,OAAO,KAAG,MAAMZ,QAAQ,IAAE;EACjE,IAAI;IACA,MAAMa,MAAM,GAAG;MACXC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACJ,CAAC;IACD,MAAMb,GAAG,GAAEP,KAAK,CAACqB,IAAI,CAAC,GAAGpB,SAAS,CAAC,CAAC,eAAe,EAACgB,WAAW,EAACE,MAAM,CAAC;IACvEb,QAAQ,CAAC;MACLG,IAAI,EAAEP,WAAW;MACjBQ,OAAO,EAACH,GAAG,CAACI;IAChB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOW,GAAG,EAAE;IACV,MAAMV,KAAK,GAAGU,GAAG,CAACR,QAAQ,CAACH,IAAI,CAACY,MAAM;IAC1C,IAAIX,KAAK,EAAE;MACTN,QAAQ,CAAC;QACPG,IAAI,EAAEG,KAAK;QACXF,OAAO,EAAEE;MACX,CAAC,CAAC;IACJ,CAAC,MAAM;MACLN,QAAQ,CAAC;QACPG,IAAI,EAAEN,aAAa;QACnBO,OAAO,EAAE;UAACG,GAAG,EAAED,KAAK,CAACE,QAAQ,CAACC;QAAU;MAC1C,CAAC,CAAC;IACJ;EACA;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}